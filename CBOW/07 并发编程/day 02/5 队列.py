# import queue
#
# # 创建一个队列
# q = queue.Queue()  # 括号内可以传参，表示生成的队列最大可以同时存放的数据量


from multiprocessing import Queue

q = Queue(5)


'''
5是队列可存放最大数，如果不指定是有默认值的

队列：取数规则，先进先出

如果队列存满了，还有数据要存，那么程序就会阻塞，不报错，直到有位置让出来
如果队列取数据，队列中没有数据了还要取，那么get()方法也会阻塞
'''

# 往队列中存数据
q.put(111)

# 去队列中取数据
v=q.get()
print(v)


'''
需求： 
    有第六个就输出，没的六个能提示，不报错
可以用异常捕捉
'''
try:
    v=q.get(timeout=3)
    print(v)
except Exception as e:
    print("队列数据已为空！")

'''
关于队列的一些常用方法：
q.put(XXX)  # 存入数据
q.get()  # 读取数据
q.get_nowait()   # 如果只用get()，没有数据时只会阻塞(一直等待)，不会报错
                 # 如果使用get_nowait(),没有数据时，直接报错，不会等待
q.get(timeout=3) # 效果类似，原地等待3秒，如果没有数据，直接报错，不会一直等到

q.full()  # 判断队列是否存满
q.empty() # 判断队列是否为空


补充：
    q.full()  # 判断队列是否存满
    q.empty() # 判断队列是否为空
    q.get_nowait() 
    这三个方法，在多进程的情况下是不精确的
    因为有极端情况，当前进程当判断完，下一个进程就 取走/填充 了数据
'''